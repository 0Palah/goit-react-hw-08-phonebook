{"version":3,"file":"static/js/933.1b32c5c1.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx"],"sourcesContent":["export const selectContactsArr = state => state.contacts.items;\nexport const selectContactsState = state => state.contacts;\nexport const selectFiltersStateValue = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contListWrapper\":\"ContactsList_contListWrapper__pBFRU\",\"button\":\"ContactsList_button__EDc5e\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactsThunks';\nimport { selectContactsState, selectFiltersStateValue } from 'redux/selectors';\nimport css from './ContactsList.module.css';\n\nconst ContactsList = () => {\n  const { items, isLoading, error } = useSelector(selectContactsState);\n  const filter = useSelector(selectFiltersStateValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteUser = userId => dispatch(deleteContact(userId));\n\n  const applyFilters = () => {\n    return items.filter(({ name }) => {\n      if (filter && !name.toLowerCase().includes(filter.toLowerCase()))\n        return false;\n      return true;\n    });\n  };\n\n  return (\n    <ul className={css.contListWrapper}>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {items?.length > 0 &&\n        applyFilters().map(el => (\n          <li key={el.id}>\n            {el.name}: {el.number}\n            <button\n              type=\"button\"\n              className={css.button}\n              onClick={() => handleDeleteUser(el.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_filterWrapper__ohvAm\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addFilterAction } from 'redux/filter/slice.filter';\nimport { selectFiltersStateValue } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFiltersStateValue);\n  const dispatch = useDispatch();\n\n  const handleChangeSearch = evt => {\n    dispatch(addFilterAction(evt.target.value));\n  };\n\n  return (\n    <div className={css.filterWrapper}>\n      <h2>Contacts</h2>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        id=\"filter\"\n        onChange={handleChangeSearch}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"button\":\"ContactForm_button__eSwX9\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/contactsThunks';\nimport { selectContactsArr, selectContactsState } from 'redux/selectors';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const items = useSelector(selectContactsArr);\n  const { isLoading } = useSelector(selectContactsState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const { inputName, inputTel } = form;\n    const newContactName = inputName.value;\n    const newContactNumber = inputTel.value;\n    const newContactOgj = {\n      name: newContactName,\n      number: newContactNumber,\n    };\n    verifyContact(newContactOgj);\n    form.reset();\n  };\n\n  const verifyContact = newContactOgj => {\n    const newName = newContactOgj.name;\n    const namesArr = items.map(el => el.name.toLocaleLowerCase());\n    if (!namesArr.includes(newName.toLocaleLowerCase())) {\n      dispatch(addContact(newContactOgj));\n    } else {\n      alert(`${newName} is already in contact.`);\n    }\n  };\n\n  return (\n    <div className={css.wrapper}>\n      {isLoading && <p>Wait, please...</p>}\n      <form className={css.form} onSubmit={handleSubmit}>\n        <div>\n          <h2>Phonebook</h2>\n          <div>\n            <label htmlFor=\"inputName\">Name</label>\n            <input\n              id=\"inputName\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"inputTel\">Number</label>\n            <input\n              id=\"inputTel\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className={css.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"names":["selectContactsArr","state","contacts","items","selectContactsState","selectFiltersStateValue","filter","useSelector","isLoading","error","dispatch","useDispatch","useEffect","fetchContacts","className","css","length","name","toLowerCase","includes","map","el","number","type","onClick","userId","id","deleteContact","htmlFor","value","onChange","evt","addFilterAction","target","verifyContact","newContactOgj","newName","toLocaleLowerCase","alert","addContact","onSubmit","preventDefault","form","inputName","inputTel","newContactName","newContactNumber","reset","pattern","title","required"],"sourceRoot":""}